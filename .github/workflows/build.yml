# Builds the Docker Image and pushes it into an Amazon ECR Repo

name: Build and Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  HYP3_REGISTRY: 845172464411.dkr.ecr.us-west-2.amazonaws.com/hyp3-back-projection:<TAG>
  S3_PYPI_HOST: hyp3-pypi-west.s3-website-us-west-2.amazonaws.com
  S3_PYPI_BUCKET: hyp3-pypi-west
  AWS_REGION: us-west-2
  AWS_ACCESS_KEY_ID: ${{ secrets.V2_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.V2_AWS_SECRET_ACCESS_KEY }}

jobs:
  
  dockerize:
    runs-on: ubuntu-latest
    #needs: package
    steps:
      - uses: actions/checkout@v2

      - name: Get Back Projection Code
        uses: actions/checkout@v2
        with:
          repository: ASFHyP3/back-projection
          path: ./back_projection/src/

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          python setup.py sdist
          #export SDIST_VERSION=${{ needs.package.outputs.SDIST_VERSION }}
          export CI_JOB_TIMESTAMP=$(date --utc --rfc-3339=seconds)
          echo "Building ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:${SDIST_VERSION/+/_}"
          docker pull ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:test || true
          docker build --no-cache \
                -t ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:${SDIST_VERSION/+/_} \
                --label org.opencontainers.image.created="${CI_JOB_TIMESTAMP}" \
                --label org.opencontainers.image.version="${SDIST_VERSION}" \
                --label org.opencontainers.image.revision="${GITHUB_SHA}" \
                --build-arg S3_PYPI_HOST=${S3_PYPI_HOST} \
                --build-arg SDIST_SPEC="==${SDIST_VERSION}" .
          #docker push ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:${SDIST_VERSION/+/_}
      
      #- name: Add test tag
      #  if: github.ref == 'refs/heads/develop'
      #  run: |
      #    export SDIST_VERSION=${{ needs.package.outputs.SDIST_VERSION }}
      #    docker tag ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:${SDIST_VERSION/+/_} \
      #        ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:test
      #    docker push ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:test
      # 
      #- name: Add latest tag
      #  if: github.ref == 'refs/heads/main'
      #  run: |
      #    export SDIST_VERSION=${{ needs.package.outputs.SDIST_VERSION }}
      #    docker tag ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:${SDIST_VERSION/+/_} \
      #        ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:latest
      #    docker push ${HYP3_REGISTRY}/${GITHUB_REPOSITORY##*/}:latest
      # 
      #- name: Logout of Amazon ECR
      #  if: always()
      #  run: docker logout ${HYP3_REGISTRY}
